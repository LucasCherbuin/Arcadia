{% extends 'headerFooter.html.twig' %}


{% block stylesheets %}
    <script src="https://unpkg.com/@phosphor-icons/web"></script>
    <link rel="stylesheet" href="/styles/compteRendu.css">
    <link rel="stylesheet" href="/styles/headerFooter.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Jersey+10&display=swap" rel="stylesheet">
{% endblock %}

{% block body %}

        <div class="button-switch mb-3">
            <button class="btn btn-primary selected" onclick="sortTable('name')">Nom</button>
            <button class="btn btn-secondary" onclick="sortTable('date')">Date</button>
        </div>

        <table class="compte-rendu-table" id="compteRenduTable">
            <thead>
                <tr>
                    <th>Nom</th>
                    <th>Date</th>
                    <th>Rapport</th>
                </tr>
            </thead>
            <tbody>
                {% for veterinaire in veterinaires %}
                    <tr>
                        <td>{{ veterinaire.animal.prenom }}</td>
                        <td>{{ veterinaire.date }}</td>
                        <td>
                            <button class="rapport-button" data-target="#rapport-veterinaire-{{ veterinaire.id }}" onclick="toggleReport(this)">
                                Rapport ▼
                            </button>
                            <div class="rapport-content d-none" id="rapport-veterinaire-{{ veterinaire.id }}">
                                <p>{{ veterinaire.detail }}</p>
                                <span>{{ veterinaire.utilisateur.email }}</span>
                            </div>

                        </td>
                    </tr>
                {% endfor %}
             </tbody>
        </table>

        <table class="compte-rendu-table" id="compteRenduTable2">
            <thead>
                <tr>
                    <th>Habitat</th>
                    <th>Utilisateur</th>
                    <th>Rapport</th>
                </tr>
            </thead>
            <tbody>
                {% for commentaire in commentaires %}
                    <tr>
                        <td>{{ commentaire.habitat.nom }}</td>
                        <td><span>{{ commentaire.utilisateur.email }}</span></td>
                        <td>
                            <button class="rapport-button" data-target="#rapport-commentaire-{{ commentaire.id }}" onclick="toggleReport(this)">
                                Rapport ▼
                            </button>
                            <div class="rapport-content d-none" id="rapport-commentaire-{{ commentaire.id }}">
                                <p>{{ commentaire.commentaire }}</p>
                                <span>{{ commentaire.utilisateur.email }}</span>
                            </div>
                        </td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>
</div>



    <script>
    function toggleReport(button) {
    // Récupérer l'ID du rapport à afficher ou masquer
    const targetId = button.getAttribute('data-target');

    // Trouver l'élément correspondant dans le DOM
    const content = document.querySelector(targetId);

    if (content) {
        // Alterner l'affichage de la section rapport
        content.classList.toggle('d-none');

        // Modifier le texte du bouton
        if (content.classList.contains('d-none')) {
            button.textContent = "Rapport ▼";
        } else {
            button.textContent = "Rapport ▲";
        }
    } else {
        console.error(`Impossible de trouver un élément avec l'ID : ${targetId}`);
    }
}




    let sortOrder = 'asc'; // Par défaut, tri croissant

    // Fonction de tri pour la table
    function sortTable(criteria) {
        const table = document.getElementById('compteRenduTable');
        const rows = Array.from(table.getElementsByTagName('tr')).slice(1); // Exclure l'entête de la table

        let comparator;

        if (criteria === 'name') {
            comparator = (rowA, rowB) => {
                const nameA = rowA.getElementsByTagName('td')[0].innerText.toLowerCase();
                const nameB = rowB.getElementsByTagName('td')[0].innerText.toLowerCase();
                return nameA.localeCompare(nameB);
            };
        } else if (criteria === 'date') {
            comparator = (rowA, rowB) => {
                const dateA = new Date(rowA.getElementsByTagName('td')[1].innerText);
                const dateB = new Date(rowB.getElementsByTagName('td')[1].innerText);
                return dateA - dateB;
            };
        }

        // Trier les lignes en fonction du critère et de l'ordre
        rows.sort(comparator);

        if (sortOrder === 'desc') {
            rows.reverse();
        }

        // Réafficher les lignes triées
        rows.forEach(row => table.appendChild(row));

        // Changer l'ordre pour la prochaine fois
        sortOrder = sortOrder === 'asc' ? 'desc' : 'asc';

        // Mettre à jour la classe 'selected' sur les boutons
        updateButtonSelection(criteria);
    }

    // Fonction pour mettre à jour la sélection du bouton
    function updateButtonSelection(selectedCriteria) {
        const buttonGroup = document.querySelector('.button-switch');
        const buttons = buttonGroup.getElementsByTagName('button');
        Array.from(buttons).forEach(button => button.classList.remove('selected'));

        if (selectedCriteria === 'name') {
            buttons[0].classList.add('selected');
        } else if (selectedCriteria === 'date') {
            buttons[1].classList.add('selected');
        }
    }
</script>
{% endblock %}
