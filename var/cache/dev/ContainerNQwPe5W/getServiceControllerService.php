<?php

namespace ContainerNQwPe5W;


use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getServiceControllerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'App\Controller\ServiceController' shared autowired service.
     *
     * @return \App\Controller\ServiceController
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'framework-bundle'.\DIRECTORY_SEPARATOR.'Controller'.\DIRECTORY_SEPARATOR.'AbstractController.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Controller'.\DIRECTORY_SEPARATOR.'ServiceController.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'EventSubscriber'.\DIRECTORY_SEPARATOR.'ImageUploadService.php';

        $container->services['App\\Controller\\ServiceController'] = $instance = new \App\Controller\ServiceController(($container->services['doctrine.orm.default_entity_manager'] ?? self::getDoctrine_Orm_DefaultEntityManagerService($container)), ($container->privates['App\\Service\\ImageUploadService'] ??= new \App\Service\ImageUploadService(['animaux' => $container->getEnv('ANIMAUX_IMAGES_DIRECTORY'), 'habitats' => $container->getEnv('HABITATS_IMAGES_DIRECTORY'), 'services' => $container->getEnv('SERVICES_IMAGES_DIRECTORY')])));

        $instance->setContainer(($container->privates['.service_locator.QaaoWjx'] ?? $container->load('get_ServiceLocator_QaaoWjxService'))->withContext('App\\Controller\\ServiceController', $container));

        return $instance;
    }
}
