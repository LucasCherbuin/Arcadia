<?php

namespace ContainerZVKftOG;


use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSncRedis_Session_HandlerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'snc_redis.session.handler' shared autowired service.
     *
     * @return \Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-foundation'.\DIRECTORY_SEPARATOR.'Session'.\DIRECTORY_SEPARATOR.'Storage'.\DIRECTORY_SEPARATOR.'Handler'.\DIRECTORY_SEPARATOR.'AbstractSessionHandler.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'http-foundation'.\DIRECTORY_SEPARATOR.'Session'.\DIRECTORY_SEPARATOR.'Storage'.\DIRECTORY_SEPARATOR.'Handler'.\DIRECTORY_SEPARATOR.'RedisSessionHandler.php';

        return $container->privates['snc_redis.session.handler'] = new \Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler(($container->privates['snc_redis.client'] ?? $container->load('getSncRedis_ClientService')));
    }
}
